"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"
" 2013.12.26,my Enail:luozh05@163.com
"                                     我喜欢的format
"
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""                                     
set et
set ci
set shiftwidth=4	
set tabstop=4
set noswapfile                              "禁止生成临时文件
set nobackup                                "覆盖文件时不备份
set hlsearch                                "搜索时高亮显示被找到的文本
set incsearch                               "输入搜索内容时就显示搜索结果
set smartindent                             "开启新行时使用智能自动缩进
set ignorecase                             "忽略大小写
"set fdm=indent
"set wrap
set number                                  " 显示行号
colorscheme delek
"set paste
set showmatch                               "插入括号时，短暂地跳转到匹配的对应括号

syntax enable                                  "自动语法高亮                                 
syntax on                                   "自动语法高亮                                 

set cursorline                              "突出显示当前行
"set tags=tags
set ru
set autoindent
set lbr
set mouse=
"colorscheme=desert
"nnoremap <silent> <F3> :Grep<CR>

map <F2> :Tlist <CR>
"Jump to previous file
"map <F3> :tabp <CR>

"Jump to next file
"map <F4> :tabn <CR>

"""""""""""""""""""""""""""""" 

" Tag list (ctags) 
"
"""""""""""""""""""""""""""""" 
let Tlist_Auto_Open = 1                    "默认打开Taglist 
let Tlist_Ctags_Cmd = '/usr/bin/ctags'
let Tlist_Show_One_File = 1                 "不同时显示多个文件的tag，只显示当前文件的
let Tlist_Exit_OnlyWindow = 1               "如果taglist窗口是最后一个窗口，则退出vim
let Tlist_File_Fold_Auto_Close=1            "让当前不被编辑的文件的方法列表自动折叠起来， 这样可以节约一些屏幕空间
"let Tlist_Use_Right_Window = 1             "在右侧窗口中显示taglist窗口
let g:winManagerWindowLayout='FileExplorer|TagList'
map wm :WMToggle<CR>

filetype plugin indent on                   " 开启插件

let g:SuperTabRetainCompletionType="context"
let g:SuperTabDefaultCompletionType="<C-X><C-O>"


set completeopt=longest,menu
"set nowrapscan                              " 禁止在搜索到文件两端时重新搜索
"set foldenable                              " 开始折叠
"set foldmethod=syntax                       " 设置语法折叠
"set foldmethod=manual                       " 设置语法折叠
"set foldcolumn=0                            " 设置折叠区域的宽度
"setlocal foldlevel=1                        " 设置折叠层数为
"set foldclose=all                          " 设置为自动关闭折叠                            
"nnoremap <space> @=((foldclosed(line('.')) < 0) ? 'zc' : 'zo')<CR>
                                            " 用空格键来开关折叠
if has("autocmd")
    autocmd BufRead *.txt set tw=78
    autocmd BufReadPost *
    \ if line("'\"") > 0 && line ("'\"") <= line("$") |
    \  exe "norma1 g'\"" |
    \ endif
endif


if filereadable("tags")
set tags=tags;/
endif

if has("cscope")
	set csprg=/usr/bin/cscope
	set csto=0
	set cst
	set nocsverb
	"add any database in current directory

	for i in range(1, 10)
		if filereadable("cscope.out")
			cs add cscope.out
"			set flag_c=1
			break
		else
        		cd .. "> /dev/null
		endif
	endfor

"        if $flag_c != 1
"	    cd /usr/src/linux-headers-2.6.38-14/
"	    cs add cscope.out
"	endif

"	if filereadable("cscope.out")
"		cs add cscope.out
"	elseif $CSCOPE_DB != ""
"		cs add $CSCOPE_DB
"	endif

	set csverb
	set cscopetag

	"set cscopequickfix=s-,g-,d-,t-,e-,f-,i-
endif




"map <C-_>:cstag <C-R>=expand("<cword>")<CR><CR>
"If you use :cs find s ..., the result will not be displayed in a new window
nmap <C-\>s :scs find s <C-R>=expand("<cword>")<CR><CR>
nmap <C-\>g :scs find g <C-R>=expand("<cword>")<CR><CR>
nmap <C-\>c :scs find c <C-R>=expand("<cword>")<CR><CR>
nmap <C-\>t :scs find t <C-R>=expand("<cword>")<CR><CR>
nmap <C-\>e :scs find e <C-R>=expand("<cword>")<CR><CR>
nmap <C-\>f :scs find f <C-R>=expand("<cfile>")<CR><CR>
nmap <C-\>i :scs find i <C-R>=expand("<cfile>")<CR><CR>
nmap <C-\>d :scs find d <C-R>=expand("<cword>")<CR><CR>

"Ctrl+2 => <C-@>
"nmap <C-@>s :scs find s <C-R>=expand("<cword>")<CR><CR>
"nmap <C-@>g :scs find g <C-R>=expand("<cword>")<CR><CR>
"nmap <C-@>c :scs find c <C-R>=expand("<cword>")<CR><CR>
"nmap <C-@>t :scs find t <C-R>=expand("<cword>")<CR><CR>
"nmap <C-@>e :scs find e <C-R>=expand("<cword>")<CR><CR>
"nmap <C-@>f :scs find f <C-R>=expand("<cfile>")<CR><CR>
"nmap <C-@>i :scs find i <C-R>=expand("<cfile>")<CR><CR>
"nmap <C-@>d :scs find d <C-R>=expand("<cword>")<CR><CR>

"set autochdir
"
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"""""新文件标题
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"新建.c,.h,.sh,.java文件，自动插入文件头 
autocmd BufNewFile *.cpp,*.[ch],*.sh,*.java exec ":call SetTitle()" 
""定义函数SetTitle，自动插入文件头 
func SetTitle() 
    "如果文件类型为.sh文件 
    if &filetype == 'sh' 
        call setline(1,"\#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++") 
        call append(line("."), "\# File Name:".expand("%")) 
        call append(line(".")+1,"\# Author:luozh05") 
        call append(line(".")+2,"\# mail: luozh05@163.com") 
        call append(line(".")+3,"\# Created Time:".strftime("%c")) 
        call append(line(".")+4,"\#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++") 
        call append(line(".")+5,"\#!/bin/bash") 
        call append(line(".")+6,"") 
else 
    call setline(1, "/*************************************************************************") 
    call append(line("."), "  > File Name: ".expand("%")) 
    call append(line(".")+1, "  > Author: luozh05") 
    call append(line(".")+2, "  > Mail: luozh05@163.com ") 
    call append(line(".")+3, "  > Created Time: ".strftime("%c")) 
    call append(line(".")+4, " ************************************************************************/") 
    call append(line(".")+5, "") 
endif
if &filetype == 'cpp'
    call append(line(".")+6, "#include<iostream>")
    call append(line(".")+7, "using namespace std;")
    call append(line(".")+8, "") 
endif
if &filetype == 'c' 
    call append(line(".")+6, "#include<stdio.h>")
    call append(line(".")+7, "") 
endif
"   if
"   &filetype  == 'java'
"    call   append(line(".")+6,"public class ".expand("%"))
"    call   append(line(".")+7,"")
"   endif
"       "新建文件后，自动定位到文件末尾
autocmd BufNewFile *normal G
endfunc 

